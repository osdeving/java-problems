package br.com.willams.playground;

public class Tree {
	class Node {
		public Node(int key) {
			this.key = key;
		}

		public int key;
		public 	Node right;
		public	Node left;
	}	
	
	private Node root;
		
	public void insert(int key) {
		if(root == null) {
			root = new Node(key);
		} else {
			insertNode(root, key);
		}
	}

	public void traversal() {
		inOrder(root);
	}

	private void insertNode(Node node, int key) {
		if(key < node.key) {
			if(node.left == null) {
				node.left = new Node(key);
			} else {
				insertNode(node.left, key);
			}
		} else {

			if(node.right == null) {
				node.right = new Node(key);
			} else {
				insertNode(node.right, key);
			}
		}
	}

	private void inOrder(Node node) {
		if(node != null) {
			inOrder(node.left);
			System.out.println(node.key);
			inOrder(node.right);
		}
	}

	public static void main(String ...args) {
		var bst = new Tree();

		bst.insert(11);
		bst.insert(7);
		bst.insert(15);
		bst.insert(5);
		bst.insert(3);
		bst.insert(9);
		bst.insert(8);
		bst.insert(10);
		bst.insert(13);
		bst.insert(12);
		bst.insert(14);
		bst.insert(20);
		bst.insert(18);
		bst.insert(25);
		bst.insert(6);
		
		bst.traversal();
	}
}
